---
import Form from '~/components/Form';
import formStore from '~/stores/form.store';
import DataOutput from '~/components/DataOutput';

const { request } = Astro;

let data: Record<string, unknown>;

// This needs to be unique per form
const formId = 'uppercase-form';

// Example form action: converts name to uppercase
const processFormData = async (submittedData: Record<string, unknown>) => {
	const randomDelay = Math.max(Math.floor(Math.random() * 1500), 500);
	await new Promise((resolve) => setTimeout(resolve, randomDelay));

	return {
		...submittedData,
		message: (submittedData.message as string)?.toUpperCase(),
	};
};

// This is the bit that handles form POST vs fetch POST
if (request.method === 'POST') {
	if (request.headers.get('Content-Type') === 'application/json') {
		const submittedData = await request.json();
		data = await processFormData(submittedData);
		return new Response(JSON.stringify(data), { status: 200 });
	} else if (request.headers.get('Content-Type') === 'application/x-www-form-urlencoded') {
		const submittedData = Object.fromEntries(await request.formData());
		data = await processFormData(submittedData);
		formStore.setKey(formId, { response: data, pending: null, error: null });
	}
}
---

<html lang='en'>
	<head>
		<meta charset='utf-8' />
		<meta name='viewport' content='width=device-width' />
		<title>Astro</title>
	</head>

	<body>
		<h1>Astro</h1>

		<p>This form converts the submitted data to uppercase.</p>

		<Form formId={formId} client:load>
			<input type='text' name='message' autofocus />
			<button type='submit'>Submit</button>
		</Form>

		<DataOutput formId={formId} client:load />

		<style>
			html {
				color-scheme: dark light;
				font-family: system-ui, sans-serif;
			}

			body {
				margin: 0;
				display: grid;
				justify-content: center;
				justify-items: start;
				gap: 0.5rem;
			}

			h1 {
				margin-bottom: 0;
			}

			p {
				font-size: 0.8rem;
				font-style: italic;
			}

			form {
				display: flex;
				gap: 0.5rem;
			}
		</style>
	</body>
</html>
